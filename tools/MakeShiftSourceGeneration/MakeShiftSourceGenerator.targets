<Project InitialTargets="GenerateHttpConstructor">
  <UsingTask TaskName="HttpConstructorGenerator" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)/Microsoft.Build.Tasks.Core.dll">
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Net" />
      <Using Namespace="System.Text" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            const string codeTemplate =
"""
// <auto-generated/>

#nullable enable
namespace HyperSharp.Protocol
{
    public readonly partial record struct HyperStatus
    {
        /// <inheritdoc cref="global::System.Net.HttpStatusCode.{{Code}}" />
        public static HyperStatus {{Code}}() => new(global::System.Net.HttpStatusCode.{{Code}}, new HyperHeaderCollection(), null);

        /// <inheritdoc cref="global::System.Net.HttpStatusCode.{{Code}}" />
        /// <param name="body">The body of the response.</param>
        public static HyperStatus {{Code}}(object? body) => new(global::System.Net.HttpStatusCode.{{Code}}, new HyperHeaderCollection(), body);

        /// <inheritdoc cref="global::System.Net.HttpStatusCode.{{Code}}" />
        /// <param name="headers">The headers of the response.</param>
        public static HyperStatus {{Code}}(HyperHeaderCollection headers) => new(global::System.Net.HttpStatusCode.{{Code}}, headers, null);

        /// <inheritdoc cref="global::System.Net.HttpStatusCode.{{Code}}" />
        /// <param name="headers">The headers of the response.</param>
        /// <param name="body">The body of the response.</param>
        public static HyperStatus {{Code}}(HyperHeaderCollection headers, object? body) => new(global::System.Net.HttpStatusCode.{{Code}}, headers, body);
    }
}

""";

            string[] httpStatuses = Enum.GetNames(typeof(HttpStatusCode));
            foreach (string httpStatus in httpStatuses)
            {
                StringBuilder stringBuilder = new(codeTemplate);
                stringBuilder.Replace("{{Code}}", httpStatus);
                File.WriteAllText($"$(ProjectRoot)/src/HyperSharp/Protocol/HyperStatus/HyperStatus.{httpStatus}.g.cs", stringBuilder.ToString());
            }
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="GenerateHttpConstructor" BeforeTargets="CoreCompile" Condition="!Exists('$(ProjectRoot)/src/HyperSharp/Protocol/HyperStatus/HyperStatus.OK.g.cs')" >
    <HttpConstructorGenerator />
  </Target>
</Project>